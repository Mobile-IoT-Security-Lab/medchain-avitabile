name: Python tests

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - 'badges/**'
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.9', '3.10', '3.11' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install minimal test deps first
          pip install pytest pytest-cov coverage-badge
          # Best-effort install of repo requirements (some backports like dataclasses may not support py>=3.11)
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi

      - name: Run full test suite with coverage and timings
        run: |
          pytest -q tests --cov=. --cov-report=term-missing --durations=10

      - name: Generate coverage badge
        if: matrix.python-version == '3.10'
        run: |
          coverage-badge -o coverage.svg -f || true

      - name: Commit coverage badge to repo
        if: matrix.python-version == '3.10' && github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p badges
          cp -f coverage.svg badges/coverage.svg || true
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add badges/coverage.svg
          git diff --staged --quiet || git commit -m "Update coverage badge [skip ci]" || true
          git push || true

      - name: Upload coverage artifacts
        if: matrix.python-version == '3.10'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-and-reports
          path: |
            coverage.svg
            .coverage
