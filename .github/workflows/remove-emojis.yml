name: Remove Emojis

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  remove-emojis:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          pip install emoji
      
      - name: Remove emojis from all files
        run: |
          python << 'EOF'
          import os
          import re
          import emoji
          
          def remove_emojis(text):
              """Remove all emojis from text"""
              # Remove emoji characters using emoji library
              text = emoji.replace_emoji(text, replace='')
              
              # Additional regex patterns for common emoji ranges
              emoji_pattern = re.compile(
                  "["
                  "\U0001F600-\U0001F64F"  # emoticons
                  "\U0001F300-\U0001F5FF"  # symbols & pictographs
                  "\U0001F680-\U0001F6FF"  # transport & map symbols
                  "\U0001F1E0-\U0001F1FF"  # flags (iOS)
                  "\U00002702-\U000027B0"  # dingbats
                  "\U000024C2-\U0001F251"  # enclosed characters
                  "\U0001F900-\U0001F9FF"  # supplemental symbols
                  "\U0001FA00-\U0001FA6F"  # extended symbols
                  "\U00002600-\U000026FF"  # miscellaneous symbols
                  "]+", 
                  flags=re.UNICODE
              )
              text = emoji_pattern.sub(r'', text)
              return text
          
          def process_file(filepath):
              """Process a single file to remove emojis"""
              try:
                  with open(filepath, 'r', encoding='utf-8') as f:
                      content = f.read()
                  
                  new_content = remove_emojis(content)
                  
                  if content != new_content:
                      with open(filepath, 'w', encoding='utf-8') as f:
                          f.write(new_content)
                      print(f"Removed emojis from: {filepath}")
                      return True
                  return False
              except (UnicodeDecodeError, PermissionError):
                  # Skip binary files and files without read permission
                  return False
          
          # Directories and files to exclude
          exclude_dirs = {'.git', '__pycache__', 'node_modules', '.venv', 'venv', 
                         'build', 'dist', '.pytest_cache', 'coverage', 'badges'}
          exclude_extensions = {'.pyc', '.pyo', '.so', '.dll', '.exe', '.bin', 
                               '.png', '.jpg', '.jpeg', '.gif', '.ico', '.svg',
                               '.woff', '.woff2', '.ttf', '.eot'}
          
          modified_files = []
          
          # Walk through all files in the repository
          for root, dirs, files in os.walk('.'):
              # Remove excluded directories from dirs to prevent walking into them
              dirs[:] = [d for d in dirs if d not in exclude_dirs]
              
              for file in files:
                  filepath = os.path.join(root, file)
                  
                  # Skip excluded file extensions
                  if any(file.endswith(ext) for ext in exclude_extensions):
                      continue
                  
                  if process_file(filepath):
                      modified_files.append(filepath)
          
          if modified_files:
              print(f"\nTotal files modified: {len(modified_files)}")
              for f in modified_files:
                  print(f"  - {f}")
          else:
              print("No emojis found in any files.")
          EOF
      
      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -A
          git commit -m "chore: remove emojis from files [skip ci]"
          git push
